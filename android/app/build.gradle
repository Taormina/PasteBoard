apply plugin: 'com.android.application'

android {

    signingConfigs {
        release {
            def props = new Properties()
            props.load(new FileInputStream(rootProject.file("release.properties")))
            storeFile rootProject.file(props.keyStore)
            storePassword ""
            keyAlias props.keyAlias
            keyPassword ""
        }
    }

    compileSdkVersion 21
    buildToolsVersion "21.1.2"
    defaultConfig {
        applicationId "com.anthonytaormina.pasteboard"
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 10000
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            zipAlignEnabled true
        }
        debug {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.jakewharton:butterknife:5.1.2'
    compile 'com.android.support:cardview-v7:21.0.0'
    compile 'com.android.support:support-annotations:21.0.0'
}

task passwordPrompt << {
    def console = System.console()
    android.signingConfigs.release.storePassword = console.readLine("\nKeystore password: ")
    android.signingConfigs.release.keyPassword = console.readLine("\nKey password: ")
}

tasks.whenTaskAdded { task ->
    if (task.name == 'validateReleaseSigning') {
        task.dependsOn passwordPrompt
    }
}
